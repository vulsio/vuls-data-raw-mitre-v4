{
	"name": "CVE-2024-36891",
	"seq": "2024-36891",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240530"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: maple_tree: fix mas_empty_area_rev() null pointer dereference Currently the code calls mas_start() followed by mas_data_end() if the maple state is MA_START, but mas_start() may return with the maple state node == NULL. This will lead to a null pointer dereference when checking information in the NULL node, which is done in mas_data_end(). Avoid setting the offset if there is no node by waiting until after the maple state is checked for an empty or single entry state. A user could trigger the events to cause a kernel oops by unmapping all vmas to produce an empty maple tree, then mapping a vma that would cause the scenario described above.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/6c9c7c1e63b198a8b979ad963eb21410f10ccb00",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/6c9c7c1e63b198a8b979ad963eb21410f10ccb00"
		},
		{
			"text": "https://git.kernel.org/stable/c/883e5d542bbdddbddeba60250cb482baf3ae2415",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/883e5d542bbdddbddeba60250cb482baf3ae2415"
		},
		{
			"text": "https://git.kernel.org/stable/c/955a923d2809803980ff574270f81510112be9cf",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/955a923d2809803980ff574270f81510112be9cf"
		},
		{
			"text": "https://git.kernel.org/stable/c/f3956791cf526540addd3295e4c1e0f0442486cc",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/f3956791cf526540addd3295e4c1e0f0442486cc"
		}
	],
	"votes": {}
}
