{
	"name": "CVE-2024-26934",
	"seq": "2024-26934",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240219"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: USB: core: Fix deadlock in usb_deauthorize_interface() Among the attribute file callback routines in drivers/usb/core/sysfs.c, the interface_authorized_store() function is the only one which acquires a device lock on an ancestor device: It calls usb_deauthorize_interface(), which locks the interface's parent USB device. The will lead to deadlock if another process already owns that lock and tries to remove the interface, whether through a configuration change or because the device has been disconnected. As part of the removal procedure, device_del() waits for all ongoing sysfs attribute callbacks to complete. But usb_deauthorize_interface() can't complete until the device lock has been released, and the lock won't be released until the removal has finished. The mechanism provided by sysfs to prevent this kind of deadlock is to use the sysfs_break_active_protection() function, which tells sysfs not to wait for the attribute callback. Reported-and-tested by: Yue Sun <samsun1006219@gmail.com> Reported by: xingwei lee <xrivendell7@gmail.com>",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/07acf979da33c721357ff27129edf74c23c036c6",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/07acf979da33c721357ff27129edf74c23c036c6"
		},
		{
			"text": "https://git.kernel.org/stable/c/122a06f1068bf5e39089863f4f60b1f5d4273384",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/122a06f1068bf5e39089863f4f60b1f5d4273384"
		},
		{
			"text": "https://git.kernel.org/stable/c/12d6a5681a0a5cecc2af7860f0a1613fa7c6e947",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/12d6a5681a0a5cecc2af7860f0a1613fa7c6e947"
		},
		{
			"text": "https://git.kernel.org/stable/c/1b175bc579f46520b11ecda443bcd2ee4904f66a",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/1b175bc579f46520b11ecda443bcd2ee4904f66a"
		},
		{
			"text": "https://git.kernel.org/stable/c/80ba43e9f799cbdd83842fc27db667289b3150f5",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/80ba43e9f799cbdd83842fc27db667289b3150f5"
		},
		{
			"text": "https://git.kernel.org/stable/c/8cbdd324b41528994027128207fae8100dff094f",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/8cbdd324b41528994027128207fae8100dff094f"
		},
		{
			"text": "https://git.kernel.org/stable/c/ab062fa3dc69aea88fe62162c5881ba14b50ecc5",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/ab062fa3dc69aea88fe62162c5881ba14b50ecc5"
		},
		{
			"text": "https://git.kernel.org/stable/c/dbdf66250d2d33e8b27352fcb901de79f3521057",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/dbdf66250d2d33e8b27352fcb901de79f3521057"
		},
		{
			"text": "https://git.kernel.org/stable/c/e451709573f8be904a8a72d0775bf114d7c291d9",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/e451709573f8be904a8a72d0775bf114d7c291d9"
		}
	],
	"votes": {}
}
