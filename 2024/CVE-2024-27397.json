{
	"name": "CVE-2024-27397",
	"seq": "2024-27397",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240225"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: use timestamp to check for set element timeout Add a timestamp field at the beginning of the transaction, store it in the nftables per-netns area. Update set backend .insert, .deactivate and sync gc path to use the timestamp, this avoids that an element expires while control plane transaction is still unfinished. .lookup and .update, which are used from packet path, still use the current time to check if the element has expired. And .get path and dump also since this runs lockless under rcu read size lock. Then, there is async gc which also needs to check the current time since it runs asynchronously from a workqueue.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/383182db8d58c4237772ba0764cded4938a235c3",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/383182db8d58c4237772ba0764cded4938a235c3"
		},
		{
			"text": "https://git.kernel.org/stable/c/7395dfacfff65e9938ac0889dafa1ab01e987d15",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/7395dfacfff65e9938ac0889dafa1ab01e987d15"
		}
	],
	"votes": {}
}
