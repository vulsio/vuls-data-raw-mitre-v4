{
	"name": "CVE-2024-36943",
	"seq": "2024-36943",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240530"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: fs/proc/task_mmu: fix loss of young/dirty bits during pagemap scan make_uffd_wp_pte() was previously doing: pte = ptep_get(ptep); ptep_modify_prot_start(ptep); pte = pte_mkuffd_wp(pte); ptep_modify_prot_commit(ptep, pte); But if another thread accessed or dirtied the pte between the first 2 calls, this could lead to loss of that information. Since ptep_modify_prot_start() gets and clears atomically, the following is the correct pattern and prevents any possible race. Any access after the first call would see an invalid pte and cause a fault: pte = ptep_modify_prot_start(ptep); pte = pte_mkuffd_wp(pte); ptep_modify_prot_commit(ptep, pte);",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/74b3d66f91d9f539f99faad74d796fa9a389a015",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/74b3d66f91d9f539f99faad74d796fa9a389a015"
		},
		{
			"text": "https://git.kernel.org/stable/c/c70dce4982ce1718bf978a35f8e26160b82081f4",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/c70dce4982ce1718bf978a35f8e26160b82081f4"
		}
	],
	"votes": {}
}
