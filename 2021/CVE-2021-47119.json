{
	"name": "CVE-2021-47119",
	"seq": "2021-47119",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240304"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: ext4: fix memory leak in ext4_fill_super Buffer head references must be released before calling kill_bdev(); otherwise the buffer head (and its page referenced by b_data) will not be freed by kill_bdev, and subsequently that bh will be leaked. If blocksizes differ, sb_set_blocksize() will kill current buffers and page cache by using kill_bdev(). And then super block will be reread again but using correct blocksize this time. sb_set_blocksize() didn't fully free superblock page and buffer head, and being busy, they were not freed and instead leaked. This can easily be reproduced by calling an infinite loop of: systemctl start <ext4_on_lvm>.mount, and systemctl stop <ext4_on_lvm>.mount ... since systemd creates a cgroup for each slice which it mounts, and the bh leak get amplified by a dying memory cgroup that also never gets freed, and memory consumption is much more easily noticed.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/01d349a481f0591230300a9171330136f9159bcd",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/01d349a481f0591230300a9171330136f9159bcd"
		},
		{
			"text": "https://git.kernel.org/stable/c/1385b23396d511d5233b8b921ac3058b3f86a5e1",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/1385b23396d511d5233b8b921ac3058b3f86a5e1"
		},
		{
			"text": "https://git.kernel.org/stable/c/afd09b617db3786b6ef3dc43e28fe728cfea84df",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/afd09b617db3786b6ef3dc43e28fe728cfea84df"
		}
	],
	"votes": {}
}
