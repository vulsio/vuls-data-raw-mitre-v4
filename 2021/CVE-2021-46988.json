{
	"name": "CVE-2021-46988",
	"seq": "2021-46988",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240227"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: userfaultfd: release page in error path to avoid BUG_ON Consider the following sequence of events: 1. Userspace issues a UFFD ioctl, which ends up calling into shmem_mfill_atomic_pte(). We successfully account the blocks, we shmem_alloc_page(), but then the copy_from_user() fails. We return -ENOENT. We don't release the page we allocated. 2. Our caller detects this error code, tries the copy_from_user() after dropping the mmap_lock, and retries, calling back into shmem_mfill_atomic_pte(). 3. Meanwhile, let's say another process filled up the tmpfs being used. 4. So shmem_mfill_atomic_pte() fails to account blocks this time, and immediately returns - without releasing the page. This triggers a BUG_ON in our caller, which asserts that the page should always be consumed, unless -ENOENT is returned. To fix this, detect if we have such a \"dangling\" page when accounting fails, and if so, release it before returning.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/07c9b834c97d0fa3402fb7f3f3b32df370a6ff1f",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/07c9b834c97d0fa3402fb7f3f3b32df370a6ff1f"
		},
		{
			"text": "https://git.kernel.org/stable/c/140cfd9980124aecb6c03ef2e69c72d0548744de",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/140cfd9980124aecb6c03ef2e69c72d0548744de"
		},
		{
			"text": "https://git.kernel.org/stable/c/2d59a0ed8b26b8f3638d8afc31f839e27759f1f6",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/2d59a0ed8b26b8f3638d8afc31f839e27759f1f6"
		},
		{
			"text": "https://git.kernel.org/stable/c/319116227e52d49eee671f0aa278bac89b3c1b69",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/319116227e52d49eee671f0aa278bac89b3c1b69"
		},
		{
			"text": "https://git.kernel.org/stable/c/7ed9d238c7dbb1fdb63ad96a6184985151b0171c",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/7ed9d238c7dbb1fdb63ad96a6184985151b0171c"
		},
		{
			"text": "https://git.kernel.org/stable/c/ad53127973034c63b5348715a1043d0e80ceb330",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/ad53127973034c63b5348715a1043d0e80ceb330"
		},
		{
			"text": "https://git.kernel.org/stable/c/b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43"
		}
	],
	"votes": {}
}
