{
	"name": "CVE-2021-47081",
	"seq": "2021-47081",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240229"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: habanalabs/gaudi: Fix a potential use after free in gaudi_memset_device_memory Our code analyzer reported a uaf. In gaudi_memset_device_memory, cb is get via hl_cb_kernel_create() with 2 refcount. If hl_cs_allocate_job() failed, the execution runs into release_cb branch. One ref of cb is dropped by hl_cb_put(cb) and could be freed if other thread also drops one ref. Then cb is used by cb->id later, which is a potential uaf. My patch add a variable 'id' to accept the value of cb->id before the hl_cb_put(cb) is called, to avoid the potential uaf.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/115726c5d312b462c9d9931ea42becdfa838a076",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/115726c5d312b462c9d9931ea42becdfa838a076"
		},
		{
			"text": "https://git.kernel.org/stable/c/b49f5af30b0e4064fbd91e83823a4bfcb2c7a3e7",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/b49f5af30b0e4064fbd91e83823a4bfcb2c7a3e7"
		}
	],
	"votes": {}
}
