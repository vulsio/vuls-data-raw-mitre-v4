{
  "name": "CVE-2022-31183",
  "seq": "2022-31183",
  "type": "CAN",
  "status": "Candidate",
  "phase": {
    "text": "Assigned",
    "date": "20220518"
  },
  "desc": "fs2 is a compositional, streaming I/O library for Scala. When establishing a server-mode `TLSSocket` using `fs2-io` on Node.js, the parameter `requestCert = true` is ignored, peer certificate verification is skipped, and the connection proceeds. The vulnerability is limited to: 1. `fs2-io` running on Node.js. The JVM TLS implementation is completely independent. 2. `TLSSocket`s in server-mode. Client-mode `TLSSocket`s are implemented via a different API. 3. mTLS as enabled via `requestCert = true` in `TLSParameters`. The default setting is `false` for server-mode `TLSSocket`s. It was introduced with the initial Node.js implementation of fs2-io in 3.1.0. A patch is released in v3.2.11. The requestCert = true parameter is respected and the peer certificate is verified. If verification fails, a SSLException is raised. If using an unpatched version on Node.js, do not use a server-mode TLSSocket with requestCert = true to establish a mTLS connection.",
  "refs": [
    {
      "text": "https://github.com/typelevel/fs2/security/advisories/GHSA-2cpx-6pqp-wf35",
      "source": "CONFIRM",
      "url": "https://github.com/typelevel/fs2/security/advisories/GHSA-2cpx-6pqp-wf35"
    },
    {
      "text": "https://github.com/nodejs/node/issues/43994",
      "source": "MISC",
      "url": "https://github.com/nodejs/node/issues/43994"
    },
    {
      "text": "https://github.com/typelevel/fs2/commit/659824395826a314e0a4331535dbf1ef8bef8207",
      "source": "MISC",
      "url": "https://github.com/typelevel/fs2/commit/659824395826a314e0a4331535dbf1ef8bef8207"
    }
  ],
  "votes": {}
}
