{
	"name": "CVE-2022-29219",
	"seq": "2022-29219",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20220413"
	},
	"desc": "Lodestar is a TypeScript implementation of the Ethereum Consensus specification. Prior to version 0.36.0, there is a possible consensus split given maliciously-crafted `AttesterSlashing` or `ProposerSlashing` being included on-chain. Because the developers represent `uint64` values as native javascript `number`s, there is an issue when those variables with large (greater than 2^53) `uint64` values are included on chain. In those cases, Lodestar may view valid_`AttesterSlashing` or `ProposerSlashing` as invalid, due to rounding errors in large `number` values. This causes a consensus split, where Lodestar nodes are forked away from the main network. Similarly, Lodestar may consider invalid `ProposerSlashing` as valid, thus including in proposed blocks that will be considered invalid by the network. Version 0.36.0 contains a fix for this issue. As a workaround, use `BigInt` to represent `Slot` and `Epoch` values in `AttesterSlashing` and `ProposerSlashing` objects. `BigInt` is too slow to be used in all `Slot` and `Epoch` cases, so one may carefully use `BigInt` just where necessary for consensus.",
	"refs": [
		{
			"text": "https://github.com/ChainSafe/lodestar/security/advisories/GHSA-cvj7-5f3c-9vg9",
			"source": "CONFIRM",
			"url": "https://github.com/ChainSafe/lodestar/security/advisories/GHSA-cvj7-5f3c-9vg9"
		},
		{
			"text": "https://github.com/ChainSafe/lodestar/pull/3977",
			"source": "MISC",
			"url": "https://github.com/ChainSafe/lodestar/pull/3977"
		},
		{
			"text": "https://github.com/ChainSafe/lodestar/releases/tag/v0.36.0",
			"source": "MISC",
			"url": "https://github.com/ChainSafe/lodestar/releases/tag/v0.36.0"
		}
	],
	"votes": {}
}
