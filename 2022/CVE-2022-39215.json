{
  "name": "CVE-2022-39215",
  "seq": "2022-39215",
  "type": "CAN",
  "status": "Candidate",
  "phase": {
    "text": "Assigned",
    "date": "20220902"
  },
  "desc": "Tauri is a framework for building binaries for all major desktop platforms. Due to missing canonicalization when `readDir` is called recursively, it was possible to display directory listings outside of the defined `fs` scope. This required a crafted symbolic link or junction folder inside an allowed path of the `fs` scope. No arbitrary file content could be leaked. The issue has been resolved in version 1.0.6 and the implementation now properly checks if the requested (sub) directory is a symbolic link outside of the defined `scope`. Users are advised to upgrade. Users unable to upgrade should disable the `readDir` endpoint in the `allowlist` inside the `tauri.conf.json`.",
  "refs": [
    {
      "text": "https://github.com/tauri-apps/tauri/security/advisories/GHSA-28m8-9j7v-x499",
      "source": "CONFIRM",
      "url": "https://github.com/tauri-apps/tauri/security/advisories/GHSA-28m8-9j7v-x499"
    },
    {
      "text": "https://github.com/tauri-apps/tauri/issues/4882",
      "source": "MISC",
      "url": "https://github.com/tauri-apps/tauri/issues/4882"
    },
    {
      "text": "https://github.com/tauri-apps/tauri/pull/5123",
      "source": "MISC",
      "url": "https://github.com/tauri-apps/tauri/pull/5123"
    },
    {
      "text": "https://github.com/tauri-apps/tauri/pull/5123/commits/1f9b9e8d26a2c915390323e161020bcb36d44678",
      "source": "MISC",
      "url": "https://github.com/tauri-apps/tauri/pull/5123/commits/1f9b9e8d26a2c915390323e161020bcb36d44678"
    }
  ],
  "votes": {}
}
