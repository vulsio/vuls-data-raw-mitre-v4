{
  "name": "CVE-2020-5300",
  "seq": "2020-5300",
  "type": "CAN",
  "status": "Candidate",
  "phase": {
    "text": "Assigned",
    "date": "20200102"
  },
  "desc": "In Hydra (an OAuth2 Server and OpenID Certifiedâ„¢ OpenID Connect Provider written in Go), before version 1.4.0+oryOS.17, when using client authentication method 'private_key_jwt' [1], OpenId specification says the following about assertion `jti`: \"A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties\". Hydra does not check the uniqueness of this `jti` value. Exploiting this vulnerability is somewhat difficult because: - TLS protects against MITM which makes it difficult to intercept valid tokens for replay attacks - The expiry time of the JWT gives only a short window of opportunity where it could be replayed This has been patched in version v1.4.0+oryOS.17",
  "refs": [
    {
      "text": "https://github.com/ory/hydra/security/advisories/GHSA-3p3g-vpw6-4w66",
      "source": "CONFIRM",
      "url": "https://github.com/ory/hydra/security/advisories/GHSA-3p3g-vpw6-4w66"
    },
    {
      "text": "https://github.com/ory/hydra/commit/700d17d3b7d507de1b1d459a7261d6fb2571ebe3",
      "source": "MISC",
      "url": "https://github.com/ory/hydra/commit/700d17d3b7d507de1b1d459a7261d6fb2571ebe3"
    },
    {
      "text": "https://github.com/ory/hydra/releases/tag/v1.4.0",
      "source": "MISC",
      "url": "https://github.com/ory/hydra/releases/tag/v1.4.0"
    }
  ],
  "votes": {}
}
