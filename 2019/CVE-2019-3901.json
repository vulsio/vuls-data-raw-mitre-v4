{
	"name": "CVE-2019-3901",
	"seq": "2019-3901",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20190103"
	},
	"desc": "A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8.",
	"refs": [
		{
			"text": "http://www.securityfocus.com/bid/89937",
			"source": "MISC",
			"url": "http://www.securityfocus.com/bid/89937"
		},
		{
			"text": "https://lists.debian.org/debian-lts-announce/2019/05/msg00041.html",
			"source": "MISC",
			"url": "https://lists.debian.org/debian-lts-announce/2019/05/msg00041.html"
		},
		{
			"text": "https://lists.debian.org/debian-lts-announce/2019/05/msg00042.html",
			"source": "MISC",
			"url": "https://lists.debian.org/debian-lts-announce/2019/05/msg00042.html"
		},
		{
			"text": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3901",
			"source": "MISC",
			"url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3901"
		},
		{
			"text": "https://security.netapp.com/advisory/ntap-20190517-0005/",
			"source": "MISC",
			"url": "https://security.netapp.com/advisory/ntap-20190517-0005/"
		}
	],
	"votes": {}
}
