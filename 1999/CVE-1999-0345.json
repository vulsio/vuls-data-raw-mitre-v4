{
	"name": "CVE-1999-0345",
	"seq": "1999-0345",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Proposed",
		"date": "19990728"
	},
	"desc": "Jolt ICMP attack causes a denial of service in Windows 95 and Windows NT systems.",
	"refs": [
		{
			"text": "http://www.securityfocus.com/archive/1/62170",
			"source": "MISC",
			"url": "http://www.securityfocus.com/archive/1/62170"
		}
	],
	"votes": {
		"modify": {
			"text": "Frech, Wall",
			"count": "2"
		},
		"noop": {
			"text": "Bishop, Landfield, Northcutt, Ozancin",
			"count": "4"
		},
		"reviewing": {
			"text": "Christey",
			"count": "1"
		},
		"accept": {
			"text": "Blake, Cole",
			"count": "2"
		},
		"reject": {
			"text": "Armstrong, Baker, LeBlanc, Levy",
			"count": "4"
		},
		"recast": {
			"text": "Meunier",
			"count": "1"
		}
	},
	"comments": [
		{
			"text": "Invalid ICMP datagram fragments causes a denial of service in Windows 95 and\nWindows NT systems.\nReference: Q154174.\nJolt is also known as sPING, ICMP bug, Icenewk, and Ping of Death.\nIt is a modified teardrop 2 attack.  ",
			"voter": "Wall"
		},
		{
			"text": "XF:nt-ssping\nADDREF XF:ping-death\nADDREF XF:teardrop-mod\nADDREF XF:mpeix-echo-request-dos",
			"voter": "Frech"
		},
		{
			"text": "I can't tell whether the Jolt exploit at:\n\nhttp://www.securityfocus.com/templates/archive.pike?list=1&date=1997-06-28&msg=Pine.BSF.3.95q.970629163422.3264A-200000@apollo.tomco.net\n\nis exploiting any different flaw than teardrop does.",
			"voter": "Christey"
		},
		{
			"text": "[Christey changed vote from NOOP to REVIEWING]",
			"voter": "CHANGE"
		},
		{
			"text": "Jolt (original) is basically just a fragmented oversized ICMP that\nkills Win boxes ala Ping of Death.\nTeardrop is altering the offset in fragmented tcp packets so that the\nend of subsequent fragments is inside first packet...\nTeardrop 2 is UDP packets, if I remember right.\nSeems like Jolt (original, not jolt 2) is just exploit code that\ncreates a ping of death (CVE 1999-0128)",
			"voter": "Baker"
		},
		{
			"text": "I tend to agree with Baker.",
			"voter": "Levy"
		},
		{
			"text": "[Armstrong changed vote from REVIEWING to REJECT]",
			"voter": "CHANGE"
		},
		{
			"text": "This code does not use fragment overlap.  It is simply a large ICMP echo request.",
			"voter": "Armstrong"
		},
		{
			"text": "See the SCO advisory at:\nhttp://www.securityfocus.com/templates/advisory.html?id=1411\nwhich may further clarify the issue.",
			"voter": "Christey"
		},
		{
			"text": "This is a hodge-podge of DoS attacks. Jolt isn't the same\nthing as ping of death - POD was an oversized ICMP packet, Jolt froze\nLinux and Solaris (and I think not NT), IIRC Jolt2 did get NT boxes.\nTeardrop and teardrop2 were related attacks (usually ICMP frag attacks),\nbut each of these is a distinct vulnerability, affected a discrete group\nof systems, and should have distinct CVE numbers. CVE entries should be\nprecise as to what the problem is.",
			"voter": "LeBlanc"
		},
		{
			"text": "I agree with Leblanc in that Jolt is multi-faceted.  Jolt has\ncharacteristics of Ping of Death AND teardrop, but it doesn't do\neither exactly.  Moreover, it sends a truncated IP fragment.  I\ndisagree with Armstrong; jolt uses overlapping fragments.  It's not a\nsimple ping of death either.  It may be that the author's intent was\nto construct a \"super attack\" somehow combining elements of other\nvulnerabilities to try to make it more potent.  In any case it\nsucceeded in confusing the CVE board :-).\n\nI notice that Jolt uses echo replies (type 0) instead of echo\nrequests (to get past firewalls?).  Jolt is peculiar in that it also\nsends numerous overlapping fragments.  The \"Pascal Simulator\" :-) says\nit sends:\n\n- 172 fragments of length 400 with offset starting at 5120 and",
			"voter": "Meunier"
		},
		{
			"text": "> 3)),\nwhich eventually results in sending fragments inside an already",
			"voter": "increasing by about 47 (odd arithmetic of 5120 OR ((n* 380) "
		},
		{
			"text": "> 3) is greater than 5120, which occurs\nwhen n is reaches 108.  This would look a bit like TearDrop if\nfragments were reassembled on-the-fly.\n\n- 1 fragment such that the total length of all the fragments\nis greater than 65535 (my calculation is 172*380 + 418 = 65778; the\ncomment about 65538 must be wrong).  The last packet is size 418\naccording to the IP header but the buffer is of size 400.  The sendto\ntakes as argument the size of the buffer so a truncated packet is\nsent.\n\nSo, I am not sure if the problem is because the last packet\ndoesn't extend to the payload it says it has or because the total size\nof all fragments is greater than 65535.  The author says it may take\nmore than one sending, so perhaps this has to do with an incorrect\nerror handling and recovery.  One would need to experiment and isolate\neach of those characteristics and test them independently.  Inasmuch\nas each of those things is likely a different vulnerability, then I\nagree with Leblanc that this entry should be split.  I'll try that if\nI ever get bored.  Jolt 2 should also have a different entry (see\nbelow).\n\nJolt 2 runs in an infinite loop, sending the same fragmented\nIP packet, which can pretend to be \"ICMP\" or \"UDP\" data; however this\nis meaningless, as it's just a late fragment of an IP packet.  The\nattack works only as long as packets are sent.  According to\nhttp://www.securityfocus.com/archive/1/62170 the packets are\ntruncated, and would overflow over the 65535 byte limit, which is\nsimilar to Jolt.  Note that Jolt does send that much data whereas\njolt2 doesn't.  Since jolt2 is simpler and narrower than jolt, and it\nhas weaker consequences, I believe that it's a different\nvulnerability.\n\n\"Jolt 2 vulnerability causes a temporary denial-of-service in\nWindows-type OSes\" would be a title for it.",
			"voter": "covered area once ((n* 380) "
		}
	]
}
