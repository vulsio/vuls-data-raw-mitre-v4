{
	"name": "CVE-2023-52608",
	"seq": "2023-52608",
	"type": "CAN",
	"status": "Candidate",
	"phase": {
		"text": "Assigned",
		"date": "20240302"
	},
	"desc": "In the Linux kernel, the following vulnerability has been resolved: firmware: arm_scmi: Check mailbox/SMT channel for consistency On reception of a completion interrupt the shared memory area is accessed to retrieve the message header at first and then, if the message sequence number identifies a transaction which is still pending, the related payload is fetched too. When an SCMI command times out the channel ownership remains with the platform until eventually a late reply is received and, as a consequence, any further transmission attempt remains pending, waiting for the channel to be relinquished by the platform. Once that late reply is received the channel ownership is given back to the agent and any pending request is then allowed to proceed and overwrite the SMT area of the just delivered late reply; then the wait for the reply to the new request starts. It has been observed that the spurious IRQ related to the late reply can be wrongly associated with the freshly enqueued request: when that happens the SCMI stack in-flight lookup procedure is fooled by the fact that the message header now present in the SMT area is related to the new pending transaction, even though the real reply has still to arrive. This race-condition on the A2P channel can be detected by looking at the channel status bits: a genuine reply from the platform will have set the channel free bit before triggering the completion IRQ. Add a consistency check to validate such condition in the A2P ISR.",
	"refs": [
		{
			"text": "https://git.kernel.org/stable/c/12dc4217f16551d6dee9cbefc23fdb5659558cda",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/12dc4217f16551d6dee9cbefc23fdb5659558cda"
		},
		{
			"text": "https://git.kernel.org/stable/c/437a310b22244d4e0b78665c3042e5d1c0f45306",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/437a310b22244d4e0b78665c3042e5d1c0f45306"
		},
		{
			"text": "https://git.kernel.org/stable/c/614cc65032dcb0b64d23f5c5e338a8a04b12be5d",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/614cc65032dcb0b64d23f5c5e338a8a04b12be5d"
		},
		{
			"text": "https://git.kernel.org/stable/c/7f95f6997f4fdd17abec3200cae45420a5489350",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/7f95f6997f4fdd17abec3200cae45420a5489350"
		},
		{
			"text": "https://git.kernel.org/stable/c/9b5e1b93c83ee5fc9f5d7bd2d45b421bd87774a2",
			"source": "MISC",
			"url": "https://git.kernel.org/stable/c/9b5e1b93c83ee5fc9f5d7bd2d45b421bd87774a2"
		}
	],
	"votes": {}
}
